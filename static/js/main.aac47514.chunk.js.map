{"version":3,"sources":["components/Dialogs/Dialogs.module.css","api/api.js","hoc/withAuthRedirect.js","components/redux/Profile-reducer.js","utils/object-helpers.js","components/redux/Users-reducer.js","components/Navbar/Navbar.module.css","components/LoginPage/Login.module.css","assets/images/preloader.gif","components/common/FormsControls/FormsControls.js","components/Navbar/Navbar.jsx","components/Header/Header.jsx","components/redux/Auth-reducer.js","components/Header/HeaderContainer.jsx","components/Dialogs/DialogItems/DialogItem.jsx","components/Dialogs/DialogItems/DialogItemContainer.jsx","components/redux/Dialogs-reducer.js","components/Dialogs/Messages/AddMessage/AddMessage.jsx","components/Dialogs/Messages/AddMessage/AddMessageContainer.jsx","components/Dialogs/Messages/MessageItem/MessageItem.jsx","components/Dialogs/Messages/MessageItem/MessageItemContainer.jsx","components/Dialogs/Messages/Messages.jsx","components/Dialogs/Messages/MessagesContainer.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/LoginPage/LoginPage.js","components/redux/App-reducer.js","components/redux/redux-store.js","App.js","hoc/withSuspense.js","serviceWorker.js","index.js","utils/validators.js","components/common/Preloader/Preloader.js","components/Header/Header.module.css","components/common/FormsControls/FormsControls.module.css","components/common/Preloader/Preloader.module.css"],"names":["module","exports","instanse","axios","baseURL","withCredentials","headers","captchaURL","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","getUserProfile","userId","console","warn","profileAPI","followed","post","unFollowed","delete","getStatus","updateStatus","statusText","put","status","authAPI","authMe","login","email","password","rememberMe","captcha","logout","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","initialState","posts","id","message","likesCount","profile","addPost","newPostText","type","updateNewPost","text","newText","setStatus","dispatch","profileReducer","action","newPost","filter","p","postId","updateObjInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","isFollowing","unfollowed","setUsers","setCurrentPage","setTotalUsersCount","usersCount","setIsFetching","toggleIsFollowingProgress","requestUsers","totalCount","followUnfollowFlow","apiMethod","actionCreator","a","resultCode","follow","bind","unFollow","usersReducer","FormControl","input","meta","touched","error","children","hasError","className","s","formControl","Textarea","restProps","child","Input","createField","placeholder","name","validate","component","Navbar","navbar","item","activeClassName","activeLink","Header","header","src","alt","onClick","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","DialogItem","dialogItem","names","el","dialogs","key","dialogsItem","DialogItemContainer","dialogsPage","likes","messages","author","messagesTest","dialogsReducer","newMessage","newMessageText","maxLength50","maxLengthControlerConstructor","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","required","AddMessage","addMessage","values","AddMessageContainer","addMessageActiveCreation","MessageItem","messageItem","messageItemLeft","messageItemRight","MessageItemContainer","Messages","MessagesContainer","Dialogs","compose","LoginReduxForm","stopSubmit","loginPage","initialized","appReducer","reducers","combineReducers","profilePage","usersPage","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","UsersContainer","lazy","ProfileContainer","App","initializeApp","path","render","DialogsContainer","Suspense","fallback","Preloader","AppContainer","withRouter","SamuraiJSApp","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","value","maxLength","length","preloader","loader"],"mappings":"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","file":"static/js/main.aac47514.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__3NSfF\",\"dialogs\":\"Dialogs_dialogs__3EwZ0\",\"dialogsItem\":\"Dialogs_dialogsItem__2rSEW\",\"messeges\":\"Dialogs_messeges__3KTYZ\",\"messageItemLeft\":\"Dialogs_messageItemLeft__ohZ2d\",\"messageItemRight\":\"Dialogs_messageItemRight__3WvH_\"};","import * as axios from \"axios\";\r\n\r\nconst instanse = axios.create({\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true, // благодаря этому всегда отправляются куки вместе с запросом\r\n    headers: {\r\n        \"API-KEY\": \"f44e1c37-e618-4224-90c9-47813b2460fc\"\r\n    }\r\n});\r\n\r\nlet captchaURL = \"https://social-network.samuraijs.com/HelpApp/HelpApp/Captcha?w=200\\u0026h=100\\u0026c=FAodyMa%2BooV667YYJ7js3g%3D%3D\";\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instanse.get(`users?page=${currentPage}&count=${pageSize}`).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n    getUserProfile(userId) {\r\n        console.warn(\"Obsolete method. Please use profileAPI\")\r\n        return profileAPI.getUserProfile(userId)\r\n    },\r\n    followed(userId) {\r\n        return instanse.post(`/follow/${userId}`).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n    unFollowed(userId) {\r\n        return instanse.delete(`/follow/${userId}`).then((response) => {\r\n            return response.data;\r\n        });\r\n    }\r\n};\r\nexport const profileAPI = {\r\n    getUserProfile(userId) {\r\n        return instanse.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instanse.get(`profile/status/${userId}`);\r\n    },\r\n    updateStatus(statusText) {\r\n        return instanse.put(`profile/status/`, {status: statusText});\r\n    }\r\n}\r\nexport const authAPI = {\r\n    authMe() {\r\n        return instanse.get(`auth/me`).then((response) => {\r\n            return response.data;\r\n        });\r\n    },\r\n    login(email, password, rememberMe = false, captcha = captchaURL) {\r\n        debugger\r\n        return instanse.post(`auth/login`, {email, password, rememberMe, captcha}).then((response) => {\r\n            return response.data;\r\n        })\r\n    },\r\n    logout() {\r\n        return instanse.delete(`auth/login`).then((response) => {\r\n            return response.data;\r\n        })\r\n    }\r\n};\r\n","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return ConnectAuthRedirectComponent;\r\n}\r\n","import {profileAPI, usersAPI} from \"../../api/api\";\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {\r\n            id: 1,\r\n            message: \"Eu pariatur voluptate reprehenderit ad tempor velit id exercitation. Nisi occaecat incididunt\\n\" +\r\n                \"                exercitation aliqua esse deserunt ipsum esse in.\",\r\n            likesCount: 0\r\n        },\r\n        {\r\n            id: 2,\r\n            message: \"Eu pariatur voluptate reprehenderit ad tempor velit id exercitation. Nisi occaecat incididunt\\n\" +\r\n                \"                exercitation aliqua esse deserunt ipsum esse in.\",\r\n            likesCount: 15\r\n        },\r\n        {\r\n            id: 3,\r\n            message: \"Eu pariatur voluptate reprehenderit ad tempor velit id exercitation. Nisi occaecat incididunt\\n\" +\r\n                \"                exercitation aliqua esse deserunt ipsum esse in.\",\r\n            likesCount: 5\r\n        },\r\n        {id: 4, message: \"Круть\", likesCount: 7}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst SET_USER_PROFILE = \"SET-USER-PROFILE\";\r\nconst SET_STATUS = \"SET-STATUS\";\r\nconst UPDATE_STATUS = \"UPDATE-STATUS\";\r\nconst DELETE_POST = \"DELETE-POST\";\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"ADD-POST\":\r\n            let newPost = {\r\n                id: 5,\r\n                likesCount: 0,\r\n                message: action.newPostText\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            }\r\n        case \"UPDATE-NEW-POST\":\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state, profile: action.profile\r\n            }\r\n        case UPDATE_STATUS:\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state, status: action.status\r\n            }\r\n            case DELETE_POST:\r\n            return {\r\n                ...state, posts: state.posts.filter( p => p.id != action.postId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport let addPost = (newPostText) => ({type: \"ADD-POST\", newPostText});\r\nexport let setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\r\nexport let updateNewPost = (text) => ({type: \"UPDATE-NEW-POST\", newText: text});\r\nexport let setStatus = (status) => ({type: SET_STATUS, status});\r\nexport let deletePost = (postId) => ({type: DELETE_POST, postId});\r\n\r\nexport const getUserProfile = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.getUserProfile(userId).then(response => {\r\n            dispatch(setUserProfile(response.data));\r\n        });\r\n    }\r\n}\r\nexport const getStatus = (userId) => {\r\n    return (dispatch) => {\r\n        profileAPI.getStatus(userId).then(response => {\r\n            dispatch(setStatus(response.data));\r\n        });\r\n    }\r\n}\r\nexport const updateStatus = (status) => {\r\n    return (dispatch) => {\r\n        profileAPI.updateStatus(status).then(response => {\r\n            dispatch(setStatus(status));\r\n        });\r\n    }\r\n}\r\nexport default profileReducer;","\r\n\r\nexport const updateObjInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map((u) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps};\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../../api/api\";\r\nimport {updateObjInArray} from \"../../utils/object-helpers\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 20,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    isFollowing: []\r\n};\r\n\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE-IS-FETCHING\";\r\nconst TOGGLE_FOLLOWING_IN_PROGRESS = \"TOGGLE-FOLLOWING-IN-PROGRESS\";\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n\r\n        case \"FOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: updateObjInArray(state.users, action.userId, \"id\", {followed: true})\r\n                // users: state.users.map((u) => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: true};\r\n                //     }\r\n                //     return u;\r\n                // }),\r\n            }\r\n        case \"UNFOLLOW\":\r\n            return {\r\n                ...state,\r\n                users: updateObjInArray(state.users, action.userId, \"id\", {followed: false})\r\n                // users: state.users.map((u) => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: false};\r\n                //     }\r\n                //     return u;\r\n                // }),\r\n            }\r\n\r\n        case \"SET-USERS\": {\r\n            return {...state, users: action.users}\r\n        }\r\n        case \"SET-CURRENT-PAGE\": {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case \"SET-TOTAL-USERS-COUNT\": {\r\n            return {...state, totalUsersCount: action.usersCount}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_FOLLOWING_IN_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                isFollowing: action.isFollowing\r\n                    ? [...state.isFollowing, action.userId]\r\n                    : state.isFollowing.filter((id) => id != action.userId)\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport let followed = (userId) => ({type: \"FOLLOW\", userId});\r\nexport let unfollowed = (userId) => ({type: \"UNFOLLOW\", userId});\r\nexport let setUsers = (users) => ({type: \"SET-USERS\", users});\r\nexport let setCurrentPage = (currentPage) => ({type: \"SET-CURRENT-PAGE\", currentPage});\r\nexport let setTotalUsersCount = (usersCount) => ({type: \"SET-TOTAL-USERS-COUNT\", usersCount});\r\nexport let setIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport let toggleIsFollowingProgress = (isFollowing, userId) => ({\r\n    type: TOGGLE_FOLLOWING_IN_PROGRESS,\r\n    isFollowing,\r\n    userId\r\n});\r\n\r\nexport const requestUsers = (currentPage, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(setIsFetching(true));\r\n        usersAPI.getUsers(currentPage, pageSize).then(response => {\r\n            dispatch(setUsers(response.items));\r\n            dispatch(setTotalUsersCount(response.totalCount));\r\n            dispatch(setIsFetching(false));\r\n        });\r\n    }\r\n};\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleIsFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n        dispatch(toggleIsFollowingProgress(false, userId));\r\n    }\r\n};\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.followed.bind(usersAPI), followed);\r\n    }\r\n};\r\nexport const unFollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unFollowed.bind(usersAPI), unfollowed);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__2Md-O\",\"item\":\"Navbar_item__djBGR\",\"activeLink\":\"Navbar_activeLink__3BToB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__1GvjU\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.01ef99b8.gif\";","import React from \"react\";\r\nimport s from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators\";\r\n\r\n\r\nexport const FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            <div>\r\n                {hasError && error}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /> </FormControl>\r\n}\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\n// ниже то что было до деструктуризации\r\n\r\n\r\n// export const Textarea = ({input, meta: {touched, error}, ...props}) => {\r\n//     const hasError = touched && error;\r\n//     return (\r\n//         <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n//             <div>\r\n//                 <textarea {...input}{...props}/>\r\n//             </div>\r\n//             <div>\r\n//                 {hasError && error}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n// export const Input = ({input, meta: {touched, error}, ...props}) => {\r\n//     const hasError = touched && error;\r\n//     return (\r\n//         <div className={s.formControl + \" \" + (hasError ? s.error : \"\")}>\r\n//             <div>\r\n//                 <input {...input}{...props}/>\r\n//             </div>\r\n//             <div>\r\n//                 {hasError && error}\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\nexport const createField = (placeholder, name, validate, component, text = \"\", props = {}) => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name} validate={validate} component={component} {...props}/>{text}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (<div className={s.navbar}>\r\n    <div className={s.item}>\r\n      <NavLink to='/profile' activeClassName={s.activeLink}>Profile</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to='/dialogs' activeClassName={s.activeLink}>Messeges</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to='/users' activeClassName={s.activeLink}>Users</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to='/news' activeClassName={s.activeLink}>News</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to='/music' activeClassName={s.activeLink}>Music</NavLink>\r\n    </div>\r\n    <div className={s.item}>\r\n      <NavLink to='/login' activeClassName={s.activeLink}>Login</NavLink>\r\n    </div>\r\n  </div>);\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={s.header}>\r\n            <NavLink to='/'><img\r\n                src=\"https://static.rfstat.com/renderforest/images/v2/landing-pics/logo_landing/ma5.png\"\r\n                alt=\"\"/>\r\n            </NavLink>\r\n            <div className={s.login}>\r\n                {props.isAuth\r\n                    ? <div> {props.login} - <button onClick={props.logout}>Logout</button> </div>\r\n                    : <NavLink to='/login'>Login Page</NavLink>\r\n                }\r\n            </div>\r\n        </div>);\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst SET_AUTH_USER_DATA = \"project/auth/SET-AUTH-USER-DATA\";\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport let setAuthUserData = (userId, email, login, isAuth) => ({\r\n    type: SET_AUTH_USER_DATA,\r\n    payload: {userId, email, login, isAuth}\r\n});\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.authMe();\r\n    if (response.resultCode === 0) {\r\n        let {id, email, login} = response.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        authAPI.login(email, password, rememberMe).then(response => {\r\n            if (response.resultCode === 0) {\r\n                dispatch(getAuthUserData());\r\n            } else {\r\n                let action = stopSubmit('login');\r\n                dispatch(action);\r\n            }\r\n        })\r\n    }\r\n};\r\nexport const logout = () => (dispatch) => {\r\n    authAPI.logout().then(response => {\r\n        if (response.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false));\r\n        }\r\n    })\r\n}\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../redux/Auth-reducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    // componentDidMount() {\r\n    //     this.props.getAuthUserData();\r\n    //     // authAPI.authMe().then(response => {\r\n    //     //     if (response.resultCode === 0) {\r\n    //     //         let {id, email, login} = response.data;\r\n    //     //         this.props.setAuthUserData(id, email, login)\r\n    //     //     }\r\n    //     //     ;\r\n    //     // });\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        email: state.auth.email,\r\n        userId: state.auth.userId\r\n\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let dialogItem = props.names.names.map(el =>\r\n\r\n        <div className={s.dialogs} key={el.id}><NavLink to={'/dialogs/' + el.id}> {el.name}</NavLink></div>);\r\n\r\n    return (<div className={s.dialogsItem}>\r\n        {dialogItem}\r\n    </div>);\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport DialogItem from \"./DialogItem\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n//const DialogItemContainer = (props) => {\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {store => {\r\n//                 let dialogItem = store.getState().dialogsPage.names.map(el =>\r\n//                     <div className={s.dialogs}><NavLink to={'/dialogs/' + el.id}> {el.name}</NavLink></div>);\r\n//\r\n//                 return <div>\r\n//                     <DialogItem names={store.getState().dialogsPage.names}/>\r\n//                 </div>\r\n//             }}\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        names: state.dialogsPage\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\nreturn;\r\n};\r\n\r\nconst DialogItemContainer = connect(mapStateToProps, mapDispatchToProps)(DialogItem);\r\n\r\nexport default DialogItemContainer;","let initialState = {\r\n    names: [\r\n        {\r\n            id: 1, name: \"Andrey\", likes: 15, messages: [\r\n                {id: 1, text: \"Hello\", author: 1},\r\n                {id: 2, text: \"How are you?\", author: 1},\r\n                {id: 3, text: \"Ohh! Very good\", author: 2},\r\n                {id: 4, text: \"I want buy a new car\", author: 2},\r\n                {id: 4, text: \"I want buy a new car\", author: 2},\r\n                {id: 5, text: \"Its good news\", author: 1}\r\n            ]\r\n        },\r\n        {id: 2, name: \"Sergiy\", likes: 0},\r\n        {id: 3, name: \"Valera\", likes: 8},\r\n        {id: 4, name: \"Marky\", likes: 9},\r\n        {id: 5, name: \"Jack\", likes: 7},\r\n        {id: 6, name: \"Alina\", likes: 1}\r\n    ],\r\n    messagesTest: [\r\n        {id: 1, text: \"Hello\", author: 1},\r\n        {id: 2, text: \"How are you?\", author: 1},\r\n        {id: 3, text: \"Ohh! Very good\", author: 2},\r\n        {id: 4, text: \"I want buy a new car\", author: 2},\r\n        {id: 5, text: \"Its good news\", author: 1},\r\n        {id: 6, text: \"Its good news\", author: 2},\r\n        {id: 7, text: \"Thanks\", author: 2}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD-MESSAGE\":\r\n            let newMessage = {id: 8, author: 1, text: action.newMessageText};\r\n            return {\r\n                ...state,\r\n                messagesTest: [...state.messagesTest, newMessage]\r\n            }\r\n        // case \"UPDATE-NEW-MESSAGE\":\r\n        //     return {\r\n        //         ...state,\r\n        //         newMessageText: action.newMessage\r\n        //     }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport let addMessageActiveCreation = (newMessageText) => ({type: \"ADD-MESSAGE\", newMessageText});\r\n// export let updateNewMessageActiveCreation = (text) => ({type: \"UPDATE-NEW-MESSAGE\", newMessage: text});\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from './../../Dialogs.module.css';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\nimport {maxLengthControlerConstructor, required} from \"../../../../utils/validators\";\r\n\r\nconst maxLength50 = maxLengthControlerConstructor(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newMessageText\"} validate={[required, maxLength50]}\r\n                       placeholder={\"Напишите сообщение...\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Add Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageReduxForm = reduxForm({form: \"AddMessageForm\"})(AddMessageForm);\r\n\r\nconst AddMessage = (props) => {\r\n\r\n    // let newMessageElement = React.createRef();\r\n\r\n    let addNewMessage = (values) => {\r\n        props.addMessage(values.newMessageText);\r\n    };\r\n    // let onMessageChange = () => {\r\n    //     let text = newMessageElement.current.value;\r\n    //     props.onMessageChange(text);\r\n    // };\r\n\r\n    return (\r\n        <div className={s.addMessage}>\r\n            <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddMessage;","import React from 'react';\r\nimport {addMessageActiveCreation} from \"../../../redux/Dialogs-reducer\";\r\nimport AddMessage from \"./AddMessage\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const AddMessageContainer = (props) => {\r\n//\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {store => {\r\n//                 let addMessage = () => {\r\n//                     store.dispatch(addMessageActiveCreation());\r\n//                 };\r\n//                 let onMessageChange = (text) => {\r\n//                     store.dispatch(updateNewMessageActiveCreation(text));\r\n//                 };\r\n//\r\n//                 return <div>\r\n//                     <AddMessage addMessage={addMessage} onMessageChange={onMessageChange}\r\n//                                 newMessageText={store.getState().dialogsPage.newMessageText}/>\r\n//                 </div>\r\n//             }\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (newMessageText) => {\r\n            dispatch(addMessageActiveCreation(newMessageText));\r\n        }\r\n        // onMessageChange: (text) => {\r\n        //     dispatch(updateNewMessageActiveCreation(text));\r\n        // }\r\n    }\r\n};\r\n\r\nconst AddMessageContainer = connect(mapStateToProps, mapDispatchToProps)(AddMessage);\r\n\r\nexport default AddMessageContainer;","import React from 'react';\r\nimport s from './../../Dialogs.module.css';\r\n\r\n\r\nconst MessageItem = (props) => {\r\n\r\n    function author(name) {\r\n        if (name === 1) {\r\n            return s.messageItemLeft;\r\n        } else {\r\n            return s.messageItemRight;\r\n        }\r\n    }\r\n\r\n    let messageItem = props.messagesTest.map(el =>\r\n        <div className={author(el.author)} key={el.id}>{el.text} </div>);\r\n    return (<div className={s.messages}>\r\n        {messageItem}\r\n    </div>);\r\n}\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport MessageItem from \"./MessageItem\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\n// const MessageItemContainer = (props) => {\r\n//\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             { (store) => (\r\n//                 <MessageItem messagesTest={store.getState().dialogsPage.messagesTest}/>\r\n//             )\r\n//             }\r\n//         </StoreContext.Consumer>\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesTest: state.dialogsPage.messagesTest\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\nreturn;\r\n};\r\n\r\nconst MessageItemContainer = connect(mapStateToProps, mapDispatchToProps)(MessageItem);\r\n\r\nexport default MessageItemContainer;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport AddMessageContainer from \"./AddMessage/AddMessageContainer\";\r\nimport MessageItemContainer from \"./MessageItem/MessageItemContainer\";\r\n\r\n\r\nconst Messages = (props) => {\r\n\r\n    return (<div className={s.messages}>\r\n        <MessageItemContainer />\r\n        <AddMessageContainer />\r\n    </div>);\r\n}\r\n\r\nexport default Messages;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport AddMessageContainer from \"./AddMessage/AddMessageContainer\";\r\nimport MessageItemContainer from \"./MessageItem/MessageItemContainer\";\r\nimport Messages from \"./Messages\";\r\n\r\n\r\nconst MessagesContainer = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Messages props={props}/>\r\n        </div>);\r\n}\r\n\r\nexport default MessagesContainer;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItemContainer from \"./DialogItems/DialogItemContainer\";\r\nimport MessagesContainer from \"./Messages/MessagesContainer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nconst Dialogs = (props) => {\r\n    return (\r\n        <div className={s.dialogsPage}>\r\n            <DialogItemContainer/>\r\n            <MessagesContainer/>\r\n        </div>);\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        names: state.dialogsPage,\r\n        messagesTest: state.messagesTest,\r\n        newMessageText: state.newMessageText,\r\n        auth: state.auth.isAuth\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return;\r\n};\r\n\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n//\r\n// export default DialogsContainer;\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport s from './Login.module.css';\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../redux/Auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n// const LoginForm = (props) => { далее деструктуризация:\r\nconst LoginForm = ( { handleSubmit } ) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\",[required], Input )}\r\n            {createField(\"Password\", \"password\",[required], Input, null,{type: \"password\"} )}\r\n            {createField(null, \"rememberMe\",[], Input, \"remember me\", {type: \"checkbox\"} )}\r\n\r\n            {/*<div>*/}\r\n            {/*    <Field placeholder={\"Email\"} name={\"email\"} validate={[required]} component={Input}/>*/}\r\n            {/*</div>*/}\r\n            {/*<div>*/}\r\n            {/*    <Field placeholder={\"Password\"} name={\"password\"} validate={[required]} component={Input}*/}\r\n            {/*           type=\"password\"/>*/}\r\n            {/*</div>*/}\r\n            {/*<div>*/}\r\n            {/*    <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input}/> remember me*/}\r\n            {/*</div>*/}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: \"login\"})(LoginForm);\r\n\r\nconst LoginPage = ( { login, isAuth } ) => {\r\n    let onSubmit = (data) => {\r\n        login(data.email, data.password, data.rememberMe)\r\n    }\r\n    if (isAuth) {\r\n        return (\r\n            <Redirect to={\"/profile\"}/>\r\n        )\r\n    }\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {login})(LoginPage);","\r\nimport {getAuthUserData} from \"./Auth-reducer\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n};\r\n\r\nconst INITIALIZED_SUCCESS = \"INITIALIZED-SUCCESS\";\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport let initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then( () => {\r\n        dispatch(initializedSuccess())\r\n    } )\r\n}\r\n\r\n\r\nexport default appReducer;","import React from \"react\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer from \"./Profile-reducer\";\r\nimport dialogsReducer from \"./Dialogs-reducer\";\r\nimport usersReducer from \"./Users-reducer\";\r\nimport authReducer from \"./Auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./App-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, Route, withRouter} from 'react-router-dom';\r\n\r\n// import UsersContainer from \"./components/Users/UsersContainer\";\r\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\r\nimport LoginPage from \"./components/LoginPage/LoginPage\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./components/redux/App-reducer\";\r\nimport Preloader from \"./components/common/Preloader/Preloader\";\r\nimport store from \"./components/redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n\r\n        // authAPI.authMe().then(response => {\r\n        //     if (response.resultCode === 0) {\r\n        //         let {id, email, login} = response.data;\r\n        //         this.props.setAuthUserData(id, email, login)\r\n        //     }\r\n        //     ;\r\n        // });\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path=\"/dialogs\" render={() => <DialogsContainer/>}/>\r\n                    <React.Suspense fallback={<Preloader/>}>\r\n                        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer/>}/>\r\n                    </React.Suspense>\r\n\r\n                    <Route path=\"/users\" render={withSuspense(UsersContainer)}/>\r\n\r\n\r\n                    <Route path=\"/login\" render={() => <LoginPage/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n});\r\n\r\nconst AppContainer = compose(withRouter,\r\n    connect(mapStateToProps, {initializeApp}))\r\n(App)\r\n\r\nconst SamuraiJSApp = () => {\r\n    return <BrowserRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </BrowserRouter>\r\n}\r\n\r\nexport default SamuraiJSApp;","import React from \"react\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<div>Загрузка...</div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJSApp from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n    <SamuraiJSApp/>,\r\n    document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthControlerConstructor = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength}`;\r\n    return undefined;\r\n}","import loader from \"../../../assets/images/preloader.gif\";\r\nimport React from \"react\";\r\nimport s from './Preloader.module.css';\r\n\r\nlet Preloader = () => {\r\n    return <div className={s.preloader}>\r\n        <img src={loader} alt=\"\" className={s.preloader}/>\r\n    </div>\r\n};\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__31fYI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__18dqd\",\"error\":\"FormsControls_error__2GjyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1Bkgv\"};"],"sourceRoot":""}